version: '3.7'

services:
  web:
    volumes:
      - static:/static
    env_file:
      - .env
    build:
      context: .
    expose:
      - "8888"
    depends_on:
      - db
      - nginx
    networks:
      net1:
        ipv4_address: 192.168.0.242

  nginx:
    build: ./nginx
    volumes:
      - static:/static
    ports:
      - "8888:8888"
    depends_on:
      - db
    networks:
      net1:
        ipv4_address: 192.168.0.243

  db:
    build: ./postgres
    #    image: postgres:12.6-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      net1:
        ipv4_address: 192.168.0.244

  db_adminer:
    image: adminer:4.8.0
    restart: always
    ports:
      - 9000:8080
    networks:
      net1:
        ipv4_address: 192.168.0.245

volumes:
  static:
  postgres_data:

networks:
  net1:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.240/28

#---------------------------------------
#          ip_range: 192.168.0.240/28
#          gateway: 192.168.0.241
#--------------------------------
#networks:
#  bridge:
#    driver: bridge
#    ipam:
#     config:
#       - subnet: 172.10.0.0/16
##         gateway: 172.10.5.254
##         aux_addresses:
##          nginx: 172.10.1.2
##          web: 172.10.1.3
##          db: 172.10.1.4


#---------------------------------------
#    ports:
#      - "8888:8888"
#--------------------------
#    build: ./postgres
#      context: ./postgres/
#      context: .
#      dockerfile: ./postgres/Dockerfile
#-------------------------------
#networks:
#  default:
#    driver: bridge
#    external: true
#    name: container_network
